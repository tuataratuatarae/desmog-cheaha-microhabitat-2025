ggplot(aes(x = bandNum, y = cHei)) +
geom_bar(aes(fill = StreamID), stat = "identity") +
theme_bw() +
facet_wrap(~StreamID) +
labs(title = "Channel height across sites")
bands %>%
ggplot(aes(x = bandNum, y = depth)) +
geom_bar(aes(fill = StreamID), stat = "identity") +
theme_bw() +
facet_wrap(~StreamID) +
labs(title = "water depth across sites")
plots %>% ggplot(aes(x = cHei, y = DCHE_m2)) +
geom_hline(yintercept = 0)+
geom_smooth(method = 'lm', col =  "#5D695C", fill =  "#5D695C", alpha = .1) +
geom_point(size = 4, col = "#5D695C") +
xlab("Channel Height")+
ylab("Seal salamander density") +
theme_bw()
plots_3.1 = glmmTMB(sealStream ~ cHei, family = "binomial",  data = plots)
summary(plots_3.1)
plots %>% ggplot(aes(x = cHei, y = sealStream)) +
geom_hline(yintercept = 0)+
stat_smooth(method = "glm", method.args = list(family = "binomial"),
alpha = 0.10, col = "#5D695C", fill = "#5D695C") +
geom_point(size = 4, col = "#5D695C") +
xlab("Channel Height")+
ylab("Seal salamander presence") +
theme_bw()
mic_1.2 = glmmTMB(sealPres ~ per_grav * hab + (1|PlotCode)
, data = pWS, family = "binomial")
summary(mic_1.2)
resid_mic_1.2 = simulateResiduals(mic_1.2)
plot(resid_mic_1.2)
mic_1.2.1 = glmmTMB(sealPres ~ per_grav * hab + PlotCode
, data = pWS, family = "binomial")
summary(mic_1.2.1)
resid_mic_1.2.1 = simulateResiduals(mic_1.2.1)
plot(resid_mic_1.2.1)
mic_1.3 = glmmTMB(sealPres ~ per_rock * hab + (1|PlotCode), data = pWS, family = "binomial")
summary(mic_1.3)
resid_mic_1.3 = simulateResiduals(mic_1.3)
plot(resid_mic_1.3)
library(tidyverse)
library(glmmTMB)
pointsPlots = read.csv('../data/pointsPlots.csv')
glimpse(pointsPlots)
points = read.csv("../data/points.csv")
plots = read.csv("../data/plots3_2023-12-12.csv")
pointsWide
pointsPlots %>%
filter(Species %in% c('DPER')) %>%
ggplot(aes(x = mmSVL)) +
geom_histogram(aes(fill = as.factor(sealStream.x)), alpha = 0.5, position = "identity", bins = 20) +
# facet_wrap(~sealStream.x) +
theme_bw()
df1 = pointsWide %>%
filter(Occupied == 1) %>%
na.omit() %>%
group_by(PlotCode) %>%
summarize(NN_occ = mean(NN_occ_cm),
NN_vac = mean(NN_vac_cm))
pointsWide = read.csv("../data/pointsWide.csv")
df1 = pointsWide %>%
filter(Occupied == 1) %>%
na.omit() %>%
group_by(PlotCode) %>%
summarize(NN_occ = mean(NN_occ_cm),
NN_vac = mean(NN_vac_cm))
df2 = plots %>%
dplyr::select(PlotCode, per_rock, covCount) %>%
full_join(df1, by = "PlotCode")
df2 %>% ggplot(aes(x = covCount, y = NN_vac)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw()
covCount = plots %>% dplyr::select(PlotCode, covCount)
df3 = points %>% full_join(covCount, by = "PlotCode")
NNs = df3 %>% filter(Occupied == 1 & distWater < 50) %>%
mutate(stdOccDist = NN_occ_cm/covCount,
stdVacDist = NN_vac_cm/covCount,
stdOccDist2 = NN_occ_cm-NN_vac_cm)%>%
mutate(Species = ifelse(Species == "CHOW", "CAM", Species))
mean(NNs$stdOccDist, na.rm = T)
NNs %>% filter(Species %in% c("ECIR", "DPER", "DCHE", "CHOW", "CAM")) %>%
ggplot(aes(y = reorder(Species, stdOccDist), x = stdOccDist)) +
geom_vline(xintercept = 3.376002) +
geom_boxplot(fill = "transparent") +
geom_jitter(aes(col = as.factor(sealStream))) +
theme_bw()
#facet_wrap(~sealStream)
bands = bands %>%
mutate(StreamID = sub("\\-.*", "", PlotCode),
bandNum = str_sub(SubplotCode, -1))
bands = read.csv("../data/bands2.csv")
bands = bands %>%
mutate(StreamID = sub("\\-.*", "", PlotCode),
bandNum = str_sub(SubplotCode, -1))
bandsLong = bands %>%   mutate(CAM = CAM + CHOW) %>% pivot_longer(cols = c("CAM", "CHOW", "DCHE", "DPER", "ECIR", "EGUT", "PSRUB", "SAL"), names_to = "Species", values_to = "Count")
bandZeroes = bandsLong %>%
filter(Species %in% c("PSRUB", "ECIR", "EGUT", "DCHE", "DPER", "CAM")) %>%
filter(Count == 0)
bandsLong %>%
filter(Species %in% c("DCHE", "ECIR", "PSRUB", "EGUT", "DPER", "CAM", "CHOW")) %>%
ggplot() +
geom_tile(
aes(x = SubplotCode, y = Species, fill = Species,
alpha = Count), col = "white",
lwd = 1.5,
linetype = 1) +
#scale_fill_viridis_c() +
scale_fill_manual(values = cols) +
scale_alpha(range = c(0, 1)) +
#    scale_color_manual(values = cols) +
# geom_point(data = zeroes,
#            aes(x = PlotCode, y = Species),
#            col = "darkgray") +
# geom_tile(data = bandZeroes,
#          aes(x = PlotCode, y = Species),
#           fill = "white", col = "white",
#          lwd = 1.5, #alpha = 0.01,
#         linetype = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(legend.position = "bottom") +
coord_fixed() +
#coord_flip() +
labs(title = "Abundances of Salamanders and Crayfish Observed Across Field Sites")
pointsPlots = read.csv('../data/pointsPlots.csv')
glimpse(pointsPlots)
points = read.csv("../data/points.csv")
plots = read.csv("../data/plots3_2023-12-12.csv")
pointsWide = read.csv("../data/pointsWide.csv")
bands = read.csv("../data/bands2.csv")
cols = c('CHOW' = '#0c9896',
'PSRUB' = "#C95945",
"ECIR" = "#E6BC52",
'EGUT' = '#E68E1C',
"DCHE" = "#5D695C",
#"DCHE" = "#70665e",
"DPER" = "#81705c",
#'DPER' = '#AFA060',
'CAM' = "#c7a891"
)
bands = bands %>%
mutate(StreamID = sub("\\-.*", "", PlotCode),
bandNum = str_sub(SubplotCode, -1))
bandsLong = bands %>%   mutate(CAM = CAM + CHOW) %>% pivot_longer(cols = c("CAM", "CHOW", "DCHE", "DPER", "ECIR", "EGUT", "PSRUB", "SAL"), names_to = "Species", values_to = "Count")
bandZeroes = bandsLong %>%
filter(Species %in% c("PSRUB", "ECIR", "EGUT", "DCHE", "DPER", "CAM")) %>%
filter(Count == 0)
bandsLong %>%
filter(Species %in% c("DCHE", "ECIR", "PSRUB", "EGUT", "DPER", "CAM", "CHOW")) %>%
ggplot() +
geom_tile(
aes(x = SubplotCode, y = Species, fill = Species,
alpha = Count), col = "white",
lwd = 1.5,
linetype = 1) +
#scale_fill_viridis_c() +
scale_fill_manual(values = cols) +
scale_alpha(range = c(0, 1)) +
#    scale_color_manual(values = cols) +
# geom_point(data = zeroes,
#            aes(x = PlotCode, y = Species),
#            col = "darkgray") +
# geom_tile(data = bandZeroes,
#          aes(x = PlotCode, y = Species),
#           fill = "white", col = "white",
#          lwd = 1.5, #alpha = 0.01,
#         linetype = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(legend.position = "bottom") +
coord_fixed() +
#coord_flip() +
labs(title = "Abundances of Salamanders and Crayfish Observed Across Field Sites")
bandsLong %>%
filter(Species %in% c("DCHE", "ECIR", "PSRUB", "EGUT", "DPER", "CAM", "CHOW")) %>%
ggplot() +
geom_tile(
aes(x = bandNum, y = Species, fill = Species,
alpha = Count), col = "white",
lwd = 1.5,
linetype = 1) +
#scale_fill_viridis_c() +
scale_fill_manual(values = cols) +
scale_alpha(range = c(0, 1)) +
#    scale_color_manual(values = cols) +
# geom_point(data = zeroes,
#            aes(x = PlotCode, y = Species),
#            col = "darkgray") +
# geom_tile(data = bandZeroes,
#          aes(x = PlotCode, y = Species),
#           fill = "white", col = "white",
#          lwd = 1.5, #alpha = 0.01,
#         linetype = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
#theme(legend.position = "bottom") +
coord_fixed() +
facet_wrap(~PlotCode) +
#coord_flip() +
labs(title = "Abundances of Salamanders and Crayfish Observed Across Field Sites")
bandsLong %>%
filter(Species %in% c("DCHE", "ECIR", "PSRUB", "EGUT", "DPER", "CAM", "CHOW")) %>%
ggplot() +
geom_tile(
aes(x = bandNum, y = Species, fill = Species), col = "white",
lwd = 1.5,
linetype = 1) +
#scale_fill_viridis_c() +
scale_fill_manual(values = cols) +
scale_alpha(range = c(0, 1)) +
#    scale_color_manual(values = cols) +
# geom_point(data = zeroes,
#            aes(x = PlotCode, y = Species),
#            col = "darkgray") +
geom_tile(data = bandZeroes,
aes(x = bandNum, y = Species),
fill = "white", col = "white",
lwd = 1.5, #alpha = 0.01,
linetype = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
#theme(legend.position = "bottom") +
coord_fixed() +
facet_wrap(~PlotCode) +
#coord_flip() +
labs(title = "Abundances of Salamanders and Crayfish Observed Across Field Sites")
bandsLong %>%
filter(Species %in% c("DCHE", "ECIR", "PSRUB", "EGUT", "DPER", "CAM")) %>%
ggplot() +
geom_tile(
aes(x = bandNum, y = Species, fill = Species), col = "white",
lwd = 1.5,
linetype = 1) +
#scale_fill_viridis_c() +
scale_fill_manual(values = cols) +
scale_alpha(range = c(0, 1)) +
#    scale_color_manual(values = cols) +
# geom_point(data = zeroes,
#            aes(x = PlotCode, y = Species),
#            col = "darkgray") +
geom_tile(data = bandZeroes,
aes(x = bandNum, y = Species),
fill = "white", col = "white",
lwd = 1.5, #alpha = 0.01,
linetype = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
#theme(legend.position = "bottom") +
coord_fixed() +
facet_wrap(~PlotCode) +
#coord_flip() +
labs(title = "Abundances of Salamanders and Crayfish Observed Across Field Sites")
covCount = plots %>% dplyr::select(PlotCode, covCount)
df3 = points %>% full_join(covCount, by = "PlotCode")
NNs = df3 %>% filter(Occupied == 1 & distWater < 50) %>%
mutate(stdOccDist = NN_occ_cm/covCount,
stdVacDist = NN_vac_cm/covCount,
stdOccDist2 = NN_occ_cm-NN_vac_cm)%>%
mutate(Species = ifelse(Species == "CHOW", "CAM", Species))
mean(NNs$stdOccDist, na.rm = T)
NNs %>% filter(Species %in% c("ECIR", "DPER", "DCHE", "CHOW", "CAM")) %>%
ggplot(aes(y = reorder(Species, stdOccDist), x = stdOccDist)) +
geom_vline(xintercept = 3.376002) +
geom_boxplot(fill = "transparent") +
geom_jitter(aes(col = as.factor(sealStream))) +
theme_bw()
#facet_wrap(~sealStream)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# package for data manipulation and visualization
library(tidyverse)
# package to fit generalized linear mixed models
library(glmmTMB)
# package to create interactive plots to more easily explore data
library(plotly)
#package to read in data from excel spreadsheets
library(readxl)
#DHARMa residuals for glmmTMB
library(DHARMa)
#regression tables
library(sjPlot)
# conditional r2
library(performance)
library(car)
#cleaning dates
library(lubridate)
library(MuMIn)
library(lmtest)
#for analyzing compositional data - using aitchison's PCA for substrate
library(compositions)
library(ggbiplot)
# Chunk 2
#set wd
setwd("~/Downloads/GitHub/desmog-cheaha-microhabitat-2025/code")
# importing band-level data
bands = read.csv("../data/bands_2025-01-29.csv")
# importing plot-level data
plots = read.csv("../data/plots_2025-01-29.csv")
# importing data about individual organisms
points = read.csv("../data/points_2025-01-29.csv")
# importing data about capture points (by rock instead of by salamander)
pointsWide = read.csv("../data/pointsWide_2024-12-22.csv")
# Creating a vector of seal salamander streams that we can use to filter later
sealStreams = c("STRM07", "STRM06", "STRM10", "STRM01", "STRM04", "STRM08", "STRM02")
#creating a subset of bands that are from streams that had seal salamanders
ssBands = bands %>% filter(StrmID %in% sealStreams)
#creating a color palette
cols = c(
'PSRUB' = "#C95945",
"ECIR" = "#E6BC52",
'EGUT' = '#E68E1C',
"DCHE" = "#5D695C",
#"DCHE" = "#70665e",
"DPER" = "#81705c",
#'DPER' = '#AFA060',
'CAM' = "#c7a891",
'VAC' = "#90AA86"
)
colsBi = c('1' = "#5D695C",
'0' = "#90AA86")
# Chunk 3
pointsWide = pointsWide %>%
#creating a composite of rocky substrate
mutate(rocky = per_grav + per_rock) %>%
#creating a response variable for seal vs. fully vacant points
mutate(sealVac = NA) %>%
mutate(sealVac = ifelse(Occupied == 0, 0, sealVac)) %>%
mutate(sealVac = ifelse(DCHE != 0, 1, sealVac)) %>%
#creating a response variable to compare seals vs. other salamanders
mutate(sealSal = NA) %>%
mutate(sealSal = ifelse(salCount > 0, 0, sealSal)) %>%
mutate(sealSal = ifelse(DCHE != 0, 1, sealSal)) %>%
#creating a response variable for the presence of dusky salamanders
mutate(duskPres = ifelse(DPER >0, 1, 0)) %>%
#creating a response variable for the presence of 2-lined salamanders
mutate(cirrPres = ifelse(ECIR > 0, 1, 0 )) %>%
#creating a respnse variable to compare sal vs. non-sal points
mutate(salVac = ifelse(salCount > 0 & crayCount == 0, 1, 0)) %>%
mutate(nonsealSalCount = SAL + ECIR + DPER +PSRUB + D + EGUT,
nonsealOccCount = occupantCount-DCHE) %>%
mutate(roommate = ifelse(nonsealOccCount >=1, "roommate", "no roommate")) %>%
mutate(sealStream = ifelse(StrmID %in% c(sealStreams), 1, 0))
# Chunk 4
pointsWide = pointsWide %>%
mutate(hab = ifelse(distWater > 50, "terrestrial", NA)) %>%
mutate(hab = ifelse(cmDepth > 1, "stream", hab)) %>%
mutate(hab = ifelse(is.na(hab) == T, "margin", hab)) %>%
mutate(hab = as.factor(hab)) %>%
mutate(distDepth = distWater - cmDepth)
# I am going to create a color palette to make this easier to interpret
habCols = c("stream" = "#9BC4BC", "margin" = "#4B5043", "terrestrial" = "#598218")
# Chunk 5
#filtering pointsWide to only include points from streams where seal salamanders are present
pWS = pointsWide %>%
filter(StrmID %in% sealStreams) %>%
#filtering to only include observations that were under rock or wood
filter(CoverType %in% c("R", "W"))
# pointsWide %>%
#   filter(StrmID %in% sealStreams) %>%
#   group_by(CoverType) %>%
#   summarize(count = n())
# pWS %>% group_by(sealPres) %>% summarize(count = n())
# Chunk 6
mic_0 = glmmTMB(sealPres ~ (1|StrmID), data = pWS, family = "binomial")
summary(mic_0)
resid_mic_0 = simulateResiduals(mic_0)
plot(resid_mic_0)
tab_model(mic_0)
confint(mic_0)
summary(mic_0)
exp(-2.1535)
performance::r2(mic_0)
AICc(mic_0)
# Chunk 7
pWS %>% ggplot(aes(x = rocky, y = sealPres)) +
geom_jitter(aes(col = hab), height = .1) +
scale_color_manual(values = habCols) +
stat_smooth(method = "glm", method.args = list(family = "binomial")) +
theme_bw()
# Chunk 8
mic_1.1 = glmmTMB(sealPres ~ rocky + hab + (1|StrmID), data = pWS, family = "binomial")
summary(mic_1.1)
resid_mic_1.1 = simulateResiduals(mic_1.1)
plot(resid_mic_1.1)
tab_model(mic_1.1)
confint(mic_1.1)
AICc(mic_1.1)
exp( -18.672576852)
# Chunk 9
pWS %>% ggplot(aes(x = per_litter, y = sealPres)) +
geom_jitter( height = .1) +
stat_smooth(method = "glm", method.args = list(family = "binomial")) +
theme_bw()
# Chunk 10
mic_2.1 = glmmTMB(sealPres ~ per_litter + (1|StrmID), data = pWS, family = "binomial")
summary(mic_2.1)
AICc(mic_2.1)
resid_mic_2.1 = simulateResiduals(mic_2.1)
plot(resid_mic_2.1)
tab_model(mic_2.1)
confint(mic_2.1)
#obtaining the conditional and marginal r2
performance::r2(mic_2.1)
# Chunk 11
pWS %>% ggplot(aes(x = covArea, y = sealVac)) +
geom_jitter(aes(col = hab), height = .1) +
xlab("Cover Object Area (cm^2)") +
ylab("Presence of Seal Salamanders") +
scale_color_manual(values = habCols) +
stat_smooth(method = "glm", method.args = list(family = "binomial")) +
theme_bw()
# Chunk 12
mic_3.1 = glmmTMB(sealPres ~ covArea + hab + (1|StrmID), data = pWS, family = "binomial")
summary(mic_3.1)
AICc(mic_3.1)
resid_mic_3.1 = simulateResiduals(mic_3.1)
plot(resid_mic_3.1)
confint(mic_3.1)
tab_model(mic_3.1)
# Chunk 13
pWS %>% ggplot(aes(x = covArea, y = sealPres)) +
geom_jitter(aes(col = as.factor(nonsealSalCount)), height = .1) +
#scale_color_manual(values = habCols) +
stat_smooth(method = "glm", method.args = list(family = "binomial")) +
theme_bw()
# Chunk 14
mic_4.2 = glmmTMB(sealPres ~ roommate * covArea + (1|StrmID), data = pWS, family = "binomial")
summary(mic_4.2)
AICc(mic_4.2)
resid_mic_4.2 = simulateResiduals(mic_4.2)
plot(resid_mic_4.2)
tab_model(mic_4.2)
performance::r2(mic_4.2)
confint(mic_4.2)
fixef(mic_4.2)
shapiro.test(residuals(mic_4.2))
# Chunk 15
#roommate estimate: -1.0320674
exp(-1.0320674)
#cov area estimate:  0.0031035
exp(0.0031035)
#interaction estimate: -0.0018871
exp(-0.0018871 )
# Chunk 16
mic_4.3 = glmmTMB(sealPres ~ roommate + covArea + (1|StrmID), data = pWS, family = "binomial")
summary(mic_4.3)
AICc(mic_4.3)
resid_mic_4.3 = simulateResiduals(mic_4.3)
plot(resid_mic_4.3)
tab_model(mic_4.3)
confint(mic_4.3)
fixef(mic_4.3)
exp(c( -2.422635, -2.233670, 0.001897))
# Chunk 17
communityFacet = pWS %>% ggplot(aes(x = covArea, y = sealPres
)) +
geom_jitter(height = .05, col = "#5D695C") +
#scale_color_manual(values = habCols) +
stat_smooth(method = "glm",
aes(col = roommate),
method.args = list(family = "binomial"),
alpha = 0.1) +
#labs(title = "Cover Object Area vs. Talladega Seal Salamander Presence/Absence") +
xlab("Cover Object Area") +
ylab("Seal Salamander Presence/Absence") +
theme_bw() +
#facet_wrap(~nonsealOccCountBinned, labeller = labeller(nonsealOccCountBinned = as_labeller(occupantLabs))) +
theme(text = element_text(family = "Times",
size = 20
),
#legend.position = "none",
#removing the ugly gray box behind the facet labels
strip.background = element_rect(fill = "transparent", color = "black"),
strip.placement = "outside",
strip.text = element_text(color = "black"),
panel.background = element_rect(fill='transparent'),
plot.background = element_rect(fill='transparent', color=NA))
communityFacet
# ggsave(plot = communityFacet, filename = "../outputs/Figs_HerpConBio/Fig6_LogisticCommunityFacet.pdf")
pWS %>% ggplot(aes(x = as.factor(sealPres), y = covArea, col = roommate)) +
geom_jitter() +
geom_boxplot(fill = "transparent") +
theme_bw()
# Chunk 18
anova(mic_4.2, mic_0, test = "Chisq")
# Chunk 19
anova(mic_4.2, mic_4.3, test = "Chisq")
plots = read.csv("../data/plots_2025-01-29.csv")
plots = plots %>% mutate(covIndex = covCount/areaSearched)
null = glm(sealStream ~ 1, data = plots, family = "binomial")
x = glm(sealStream ~ covIndex, data = plots, family = "binomial")
summary(x)
tab_model(x)
null
x
anova(null, x, test = "Chisq")
?hoslem.test
install.packages("Resouce.Selection")
library("generalhoslem")
library("ResourceSelection")
install.packages("ResourceSelection")
?hoslem.test
library(ResourceSelection)
?hoslem.test
hl_gof = hoslem.test(x$sealStream, fitted(x))
View(x)
hl_gof = hoslem.test(x$y, fitted(x))
hl_gof
anova(mic_4.2, mic_0, test = "Chisq")
